"use strict";var ApplicationConfiguration=function(){var applicationModuleName="mean",applicationModuleVendorDependencies=["ngResource","ngAnimate","ui.router","ui.bootstrap","ui.utils","angularFileUpload"],registerModule=function(moduleName,dependencies){angular.module(moduleName,dependencies||[]),angular.module(applicationModuleName).requires.push(moduleName)};return{applicationModuleName:applicationModuleName,applicationModuleVendorDependencies:applicationModuleVendorDependencies,registerModule:registerModule}}();angular.module(ApplicationConfiguration.applicationModuleName,ApplicationConfiguration.applicationModuleVendorDependencies),angular.module(ApplicationConfiguration.applicationModuleName).config(["$locationProvider",function($locationProvider){$locationProvider.hashPrefix("!")}]),angular.element(document).ready(function(){"#_=_"===window.location.hash&&(window.location.hash="#!"),angular.bootstrap(document,[ApplicationConfiguration.applicationModuleName])}),ApplicationConfiguration.registerModule("affectations"),ApplicationConfiguration.registerModule("articles"),ApplicationConfiguration.registerModule("categories"),ApplicationConfiguration.registerModule("comments"),ApplicationConfiguration.registerModule("contenus"),ApplicationConfiguration.registerModule("core"),ApplicationConfiguration.registerModule("cours"),ApplicationConfiguration.registerModule("dataImages"),ApplicationConfiguration.registerModule("dataVideos"),ApplicationConfiguration.registerModule("emploies"),ApplicationConfiguration.registerModule("evenements"),ApplicationConfiguration.registerModule("likes"),ApplicationConfiguration.registerModule("moderations"),ApplicationConfiguration.registerModule("notifications"),ApplicationConfiguration.registerModule("offres"),ApplicationConfiguration.registerModule("pub-contenus"),ApplicationConfiguration.registerModule("pub-imags"),ApplicationConfiguration.registerModule("pub-videos"),ApplicationConfiguration.registerModule("signalements"),ApplicationConfiguration.registerModule("statuses"),ApplicationConfiguration.registerModule("users"),angular.module("affectations").run(["Menus",function(){}]),angular.module("affectations").config(["$stateProvider",function($stateProvider){$stateProvider.state("listAffectations",{url:"/affectations",templateUrl:"modules/affectations/views/list-affectations.client.view.html"}).state("createAffectation",{url:"/affectations/create",templateUrl:"modules/affectations/views/create-affectation.client.view.html"}).state("viewAffectation",{url:"/affectations/:affectationId",templateUrl:"modules/affectations/views/view-affectation.client.view.html"}).state("editAffectation",{url:"/affectations/:affectationId/edit",templateUrl:"modules/affectations/views/edit-affectation.client.view.html"})}]),angular.module("affectations").controller("AffectationsController",["$scope","$stateParams","$location","Authentication","Affectations",function($scope,$stateParams,$location,Authentication,Affectations){$scope.authentication=Authentication,$scope.create=function(){var affectation=new Affectations({name:this.name});affectation.$save(function(response){$location.path("affectations/"+response._id),$scope.name=""},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.remove=function(affectation){if(affectation){affectation.$remove();for(var i in $scope.affectations)$scope.affectations[i]===affectation&&$scope.affectations.splice(i,1)}else $scope.affectation.$remove(function(){$location.path("affectations")})},$scope.update=function(){var affectation=$scope.affectation;affectation.$update(function(){$location.path("affectations/"+affectation._id)},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.find=function(){$scope.affectations=Affectations.query()},$scope.findOne=function(){$scope.affectation=Affectations.get({affectationId:$stateParams.affectationId})}}]),angular.module("affectations").factory("Affectations",["$resource",function($resource){return $resource("affectations/:affectationId",{affectationId:"@_id"},{update:{method:"PUT"}})}]),angular.module("articles").run(["Menus",function(){}]),angular.module("articles").config(["$stateProvider",function($stateProvider){$stateProvider.state("listArticles",{url:"/articles",templateUrl:"modules/articles/views/list-articles.client.view.html"}).state("createArticle",{url:"/articles/create",templateUrl:"modules/articles/views/create-article.client.view.html"}).state("viewArticle",{url:"/articles/:articleId",templateUrl:"modules/articles/views/view-article.client.view.html"}).state("editArticle",{url:"/articles/:articleId/edit",templateUrl:"modules/articles/views/edit-article.client.view.html"})}]),angular.module("articles").controller("ArticlesController",["$scope","$stateParams","$location","Authentication","Articles",function($scope,$stateParams,$location,Authentication,Articles){$scope.authentication=Authentication,$scope.create=function(){var article=new Articles({title:this.title,content:this.content});article.$save(function(response){$location.path("articles/"+response._id),$scope.title="",$scope.content=""},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.remove=function(article){if(article){article.$remove();for(var i in $scope.articles)$scope.articles[i]===article&&$scope.articles.splice(i,1)}else $scope.article.$remove(function(){$location.path("articles")})},$scope.update=function(){var article=$scope.article;article.$update(function(){$location.path("articles/"+article._id)},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.find=function(){$scope.articles=Articles.query()},$scope.findOne=function(){$scope.article=Articles.get({articleId:$stateParams.articleId})}}]),angular.module("articles").factory("Articles",["$resource",function($resource){return $resource("articles/:articleId",{articleId:"@_id"},{update:{method:"PUT"}})}]),angular.module("categories").run(["Menus",function(){}]),angular.module("categories").config(["$stateProvider",function($stateProvider){$stateProvider.state("listCategories",{url:"/categories",templateUrl:"modules/categories/views/list-categories.client.view.html"}).state("createCategorie",{url:"/categories/create",templateUrl:"modules/categories/views/create-categorie.client.view.html"}).state("viewCategorie",{url:"/categories/:categorieId",templateUrl:"modules/categories/views/view-categorie.client.view.html"}).state("editCategorie",{url:"/categories/:categorieId/edit",templateUrl:"modules/categories/views/edit-categorie.client.view.html"})}]),angular.module("categories").controller("CategoriesController",["$scope","$stateParams","$location","Authentication","Categories",function($scope,$stateParams,$location,Authentication,Categories){$scope.authentication=Authentication,$scope.create=function(){var categorie=new Categories({name:this.name});categorie.$save(function(response){$location.path("categories/"+response._id),$scope.name=""},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.remove=function(categorie){if(categorie){categorie.$remove();for(var i in $scope.categories)$scope.categories[i]===categorie&&$scope.categories.splice(i,1)}else $scope.categorie.$remove(function(){$location.path("categories")})},$scope.update=function(){var categorie=$scope.categorie;categorie.$update(function(){$location.path("categories/"+categorie._id)},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.find=function(){$scope.categories=Categories.query()},$scope.findOne=function(){$scope.categorie=Categories.get({categorieId:$stateParams.categorieId})}}]),angular.module("categories").factory("Categories",["$resource",function($resource){return $resource("categories/:categorieId",{categorieId:"@_id"},{update:{method:"PUT"}})}]),angular.module("comments").run(["Menus",function(){}]),angular.module("comments").config(["$stateProvider",function($stateProvider){$stateProvider.state("listComments",{url:"/comments",templateUrl:"modules/comments/views/list-comments.client.view.html"}).state("createComment",{url:"/comments/create",templateUrl:"modules/comments/views/create-comment.client.view.html"}).state("viewComment",{url:"/comments/:commentId",templateUrl:"modules/comments/views/view-comment.client.view.html"}).state("editComment",{url:"/comments/:commentId/edit",templateUrl:"modules/comments/views/edit-comment.client.view.html"})}]),angular.module("comments").controller("CommentsController",["$scope","$http","$stateParams","$location","Authentication","Comments",function($scope,$http,$stateParams,$location,Authentication,Comments){$scope.authentication=Authentication,this.createCommentContenu=function(contenu){var comment=new Comments({name:$scope.name});console.log("commentaire a �t� "+contenu._id),comment.$save({contenuId:contenu._id},function(){$scope.name=""},function(errorResponse){$scope.error=errorResponse.data.message}),this.find(contenu)},this.removeCommentContenu=function(contenu,comment){$http["delete"]("/contenus/"+contenu._id+"/comments/"+comment._id).success(function(){}),this.find(contenu)},this.updateCommentContenu=function(contenu,comment){var newComment=comment;$http.put("contenus/"+contenu._id+"/comments/"+comment._id,newComment).success(function(response){console.log("comment  "+response.name+" updated")})},this.find=function(contenu){$http.get("contenus/"+contenu._id+"/comments/").success(function(response){console.log("i got the data contactList  "+response.length),$scope.commentsList=response})},$scope.findOne=function(){$scope.comment=Comments.get({commentId:$stateParams.commentId})}}]),angular.module("comments").factory("Comments",["$resource",function($resource){return $resource("contenus/:contenuId/comments/:commentId",{contenuId:"@contenuId",commentId:"@_id"},{update:{method:"PUT"}})}]),angular.module("contenus").run(["Menus",function(Menus){Menus.addMenuItem("topbar","Contenus","contenus","icon-ship-wheel","/contenus(/create)?"),Menus.addMenuItem("topbar","Images","pub-imags","fa fa-picture-o","/pub-imags(/create)?"),Menus.addMenuItem("topbar","Videos","pub-videos","fa fa-group","/pub-videos(/create)?"),Menus.addMenuItem("topbar","Offres","offres","icon-user-1","/offres(/create)?"),Menus.addMenuItem("topbar","Evenements","evenements","icon-comment-fill-1","/evenements(/create)?")}]),angular.module("contenus").config(["$stateProvider",function($stateProvider){$stateProvider.state("listContenus",{url:"/contenus",templateUrl:"modules/contenus/views/list-contenus.client.view.html"}).state("createContenu",{url:"/contenus/create",templateUrl:"modules/contenus/views/create-contenu.client.view.html"}).state("viewContenu",{url:"/contenus/:contenuId",templateUrl:"modules/contenus/views/view-contenu.client.view.html"}).state("editContenu",{url:"/contenus/:contenuId/edit",templateUrl:"modules/contenus/views/edit-contenu.client.view.html"})}]),angular.module("contenus").controller("ContenusController",["$scope","$stateParams","$location","Authentication","ngTagsInput","Contenus",function($scope,$stateParams,$location,Authentication,Contenus){$scope.authentication=Authentication,$scope.create=function(){var contenu=new Contenus({name:this.name,tags:this.tags});contenu.$save(function(response){$location.path("contenus/"+response._id),$scope.name=""},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.remove=function(contenu){if(contenu){contenu.$remove();for(var i in $scope.contenus)$scope.contenus[i]===contenu&&$scope.contenus.splice(i,1)}else $scope.contenu.$remove(function(){$location.path("contenus")})},$scope.update=function(){var contenu=$scope.contenu;contenu.$update(function(){$location.path("contenus/"+contenu._id)},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.find=function(){$scope.contenus=Contenus.query()},$scope.findOne=function(){$scope.contenu=Contenus.get({contenuId:$stateParams.contenuId})}}]),angular.module("contenus").factory("Contenus",["$resource",function($resource){return $resource("contenus/:contenuId",{contenuId:"@_id"},{update:{method:"PUT"}})}]),angular.module("core").config(["$stateProvider","$urlRouterProvider",function($stateProvider,$urlRouterProvider){$urlRouterProvider.otherwise("/"),$stateProvider.state("home",{url:"/",templateUrl:"modules/core/views/home.client.view.html"})}]),angular.module("core").controller("HeaderController",["$scope","Authentication","Menus",function($scope,Authentication,Menus){$scope.authentication=Authentication,$scope.isCollapsed=!1,$scope.menu=Menus.getMenu("topbar"),$scope.toggleCollapsibleMenu=function(){$scope.isCollapsed=!$scope.isCollapsed},$scope.$on("$stateChangeSuccess",function(){$scope.isCollapsed=!1})}]),angular.module("core").controller("HomeController",["$scope","Authentication","Menus",function($scope,Authentication,Menus){$scope.authentication=Authentication,$scope.isCollapsed=!1,$scope.menu=Menus.getMenu("topbar"),$scope.toggleCollapsibleMenu=function(){$scope.isCollapsed=!$scope.isCollapsed},$scope.$on("$stateChangeSuccess",function(){$scope.isCollapsed=!1})}]),angular.module("core").service("Menus",[function(){this.defaultRoles=["*"],this.menus={};var shouldRender=function(user){if(!user)return this.isPublic;if(~this.roles.indexOf("*"))return!0;for(var userRoleIndex in user.roles)for(var roleIndex in this.roles)if(this.roles[roleIndex]===user.roles[userRoleIndex])return!0;return!1};this.validateMenuExistance=function(menuId){if(menuId&&menuId.length){if(this.menus[menuId])return!0;throw new Error("Menu does not exists")}throw new Error("MenuId was not provided")},this.getMenu=function(menuId){return this.validateMenuExistance(menuId),this.menus[menuId]},this.addMenu=function(menuId,isPublic,roles){return this.menus[menuId]={isPublic:isPublic||!1,roles:roles||this.defaultRoles,items:[],shouldRender:shouldRender},this.menus[menuId]},this.removeMenu=function(menuId){this.validateMenuExistance(menuId),delete this.menus[menuId]},this.addMenuItem=function(menuId,menuItemTitle,menuItemURL,menuItemType,menuItemUIRoute,isPublic,roles,position){return this.validateMenuExistance(menuId),this.menus[menuId].items.push({title:menuItemTitle,link:menuItemURL,menuItemType:menuItemType||"item",menuItemClass:menuItemType,uiRoute:menuItemUIRoute||"/"+menuItemURL,isPublic:null===isPublic||"undefined"==typeof isPublic?this.menus[menuId].isPublic:isPublic,roles:null===roles||"undefined"==typeof roles?this.menus[menuId].roles:roles,position:position||0,items:[],shouldRender:shouldRender}),this.menus[menuId]},this.addSubMenuItem=function(menuId,rootMenuItemURL,menuItemTitle,menuItemURL,menuItemUIRoute,isPublic,roles,position){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)this.menus[menuId].items[itemIndex].link===rootMenuItemURL&&this.menus[menuId].items[itemIndex].items.push({title:menuItemTitle,link:menuItemURL,uiRoute:menuItemUIRoute||"/"+menuItemURL,isPublic:null===isPublic||"undefined"==typeof isPublic?this.menus[menuId].items[itemIndex].isPublic:isPublic,roles:null===roles||"undefined"==typeof roles?this.menus[menuId].items[itemIndex].roles:roles,position:position||0,shouldRender:shouldRender});return this.menus[menuId]},this.removeMenuItem=function(menuId,menuItemURL){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)this.menus[menuId].items[itemIndex].link===menuItemURL&&this.menus[menuId].items.splice(itemIndex,1);return this.menus[menuId]},this.removeSubMenuItem=function(menuId,submenuItemURL){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)for(var subitemIndex in this.menus[menuId].items[itemIndex].items)this.menus[menuId].items[itemIndex].items[subitemIndex].link===submenuItemURL&&this.menus[menuId].items[itemIndex].items.splice(subitemIndex,1);return this.menus[menuId]},this.addMenu("topbar")}]),angular.module("cours").run(["Menus",function(){}]),angular.module("cours").config(["$stateProvider",function($stateProvider){$stateProvider.state("listCours",{url:"/cours",templateUrl:"modules/cours/views/list-cours.client.view.html"}).state("createCour",{url:"/cours/create",templateUrl:"modules/cours/views/create-cour.client.view.html"}).state("viewCour",{url:"/cours/:courId",templateUrl:"modules/cours/views/view-cour.client.view.html"}).state("editCour",{url:"/cours/:courId/edit",templateUrl:"modules/cours/views/edit-cour.client.view.html"})}]),angular.module("cours").controller("CoursController",["$scope","$stateParams","$location","Authentication","Cours",function($scope,$stateParams,$location,Authentication,Cours){$scope.authentication=Authentication,$scope.create=function(){var cour=new Cours({name:this.name});cour.$save(function(response){$location.path("cours/"+response._id),$scope.name=""},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.remove=function(cour){if(cour){cour.$remove();for(var i in $scope.cours)$scope.cours[i]===cour&&$scope.cours.splice(i,1)}else $scope.cour.$remove(function(){$location.path("cours")})},$scope.update=function(){var cour=$scope.cour;cour.$update(function(){$location.path("cours/"+cour._id)},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.find=function(){$scope.cours=Cours.query()},$scope.findOne=function(){$scope.cour=Cours.get({courId:$stateParams.courId})}}]),angular.module("cours").factory("Cours",["$resource",function($resource){return $resource("cours/:courId",{courId:"@_id"},{update:{method:"PUT"}})}]),angular.module("dataImages").factory("DataImages",["$resource",function($resource){return $resource("dataImages/:dataImageId",{testId:"@_id"},{update:{method:"PUT"}})}]),angular.module("dataVideos").factory("DataVideos",["$resource",function($resource){return $resource("dataVideos/:dataVideoId",{testId:"@_id"},{update:{method:"PUT"}})}]),angular.module("emploies").run(["Menus",function(){}]),angular.module("emploies").config(["$stateProvider",function($stateProvider){$stateProvider.state("listEmploies",{url:"/emploies",templateUrl:"modules/emploies/views/list-emploies.client.view.html"}).state("createEmploie",{url:"/emploies/create",templateUrl:"modules/emploies/views/create-emploie.client.view.html"}).state("viewEmploie",{url:"/emploies/:emploieId",templateUrl:"modules/emploies/views/view-emploie.client.view.html"}).state("editEmploie",{url:"/emploies/:emploieId/edit",templateUrl:"modules/emploies/views/edit-emploie.client.view.html"})}]),angular.module("emploies").controller("EmploiesController",["$scope","$stateParams","$location","Authentication","Emploies",function($scope,$stateParams,$location,Authentication,Emploies){$scope.authentication=Authentication,$scope.create=function(){var emploie=new Emploies({name:this.name});emploie.$save(function(response){$location.path("emploies/"+response._id),$scope.name=""},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.remove=function(emploie){if(emploie){emploie.$remove();for(var i in $scope.emploies)$scope.emploies[i]===emploie&&$scope.emploies.splice(i,1)}else $scope.emploie.$remove(function(){$location.path("emploies")})},$scope.update=function(){var emploie=$scope.emploie;emploie.$update(function(){$location.path("emploies/"+emploie._id)},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.find=function(){$scope.emploies=Emploies.query()},$scope.findOne=function(){$scope.emploie=Emploies.get({emploieId:$stateParams.emploieId})}}]),angular.module("emploies").factory("Emploies",["$resource",function($resource){return $resource("emploies/:emploieId",{emploieId:"@_id"},{update:{method:"PUT"}})}]),angular.module("evenements").run(["Menus",function(){}]),angular.module("evenements").config(["$stateProvider",function($stateProvider){$stateProvider.state("listEvenements",{url:"/evenements",templateUrl:"modules/evenements/views/list-evenements.client.view.html"}).state("createEvenement",{url:"/evenements/create",templateUrl:"modules/evenements/views/create-evenement.client.view.html"}).state("viewEvenement",{url:"/evenements/:evenementId",templateUrl:"modules/evenements/views/view-evenement.client.view.html"}).state("editEvenement",{url:"/evenements/:evenementId/edit",templateUrl:"modules/evenements/views/edit-evenement.client.view.html"})}]),angular.module("evenements").controller("EvenementsController",["$scope","$http","$stateParams","$location","Authentication","Evenements","$modal","$log","$http",function($scope,$http,$stateParams,$location,Authentication,Evenements,$modal,$log){$scope.authentication=Authentication,this.modalCreate=function(size){var modalInstance=$modal.open({animation:$scope.animationsEnabled,templateUrl:"modules/evenements/views/create-evenement.client.view.html",controller:["$scope","$modalInstance","parentScope",function($scope,$modalInstance,parentScope){$scope.create=function(){$scope.dt.setHours($scope.mytime.getHours(),$scope.mytime.getMinutes(),0,0);var evenement=new Evenements({titre:$scope.newEventTitle,description:$scope.newEventDescription,date:$scope.dt,lieu:$scope.newEventPlace});evenement.$save(function(){parentScope.find()},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.today=function(){$scope.dt=new Date},$scope.today(),$scope.clear=function(){$scope.dt=null},$scope.disabled=function(date,mode){return"day"===mode&&5===date.getDay()},$scope.toggleMin=function(){$scope.minDate=$scope.minDate?null:new Date},$scope.toggleMin(),$scope.open=function($event){$event.preventDefault(),$event.stopPropagation(),$scope.opened=!0},$scope.dateOptions={formatYear:"yy",startingDay:1},$scope.formats=["dd-MMMM-yyyy","yyyy/MM/dd","dd.MM.yyyy","shortDate"],$scope.format=$scope.formats[0];var tomorrow=new Date;tomorrow.setDate(tomorrow.getDate()+1);var afterTomorrow=new Date;afterTomorrow.setDate(tomorrow.getDate()+2),$scope.events=[{date:tomorrow,status:"full"},{date:afterTomorrow,status:"partially"}],$scope.getDayClass=function(date,mode){if("day"===mode)for(var dayToCheck=new Date(date).setHours($scope.mytime.getHours(),$scope.mytime.getMinutes(),0,0),i=0;i<$scope.events.length;i++){var currentDay=new Date($scope.events[i].date).setHours($scope.mytime.getHours(),$scope.mytime.getMinutes(),0,0);if(dayToCheck===currentDay)return $scope.events[i].status}return""},$scope.mytime=new Date,$scope.hstep=1,$scope.mstep=15,$scope.options={hstep:[1,2,3],mstep:[1,5,10,15,25,30]},$scope.ismeridian=!0,$scope.toggleMode=function(){$scope.ismeridian=!$scope.ismeridian},$scope.update=function(){var d=new Date;d.setHours(14),d.setMinutes(0),$scope.mytime=d},$scope.clear=function(){$scope.mytime=null},$scope.ok=function(){$scope.create(),modalInstance.close()},$scope.cancel=function(){$modalInstance.dismiss("cancel")}}],size:size,resolve:{evenement:function(){return $scope.evenement},parentScope:function(){return $scope}}})},this.modalUpdate=function(size,selectedEvent){console.log("yow yow from modalUpdate");var modalInstance=$modal.open({templateUrl:"modules/evenements/views/edit-evenement.client.view.html",controller:["$scope","$modalInstance","evenement",function($scope,$modalInstance,evenement){$scope.evenement=evenement,$scope.ok=function(){modalInstance.close($scope.evenement)},$scope.cancel=function(){$modalInstance.dismiss("cancel")}}],size:size,resolve:{evenement:function(){return selectedEvent}}});modalInstance.result.then(function(selectedItem){$scope.selected=selectedItem},function(){$log.info("Modal dismissed at: "+new Date)})},$scope.find=this.find=function(){$http.get("evenements/").success(function(response){console.log("i got the data contactList  "+response.length),$scope.evenementsList=response})},this.remove=function(contenu){$http["delete"]("/evenements/"+contenu.evenement._id).success(function(){$scope.find()})},$scope.findOne=function(){$scope.evenement=Evenements.get({evenementId:$stateParams.evenementId})}}]),angular.module("evenements").controller("EvenementsUpdateController",["$scope","Evenements",function($scope){this.update=function(updatedEvent){var evenement=updatedEvent;evenement.date.getsetHours(updatedEvent.mytime.getHours(),updatedEvent.mytime.getMinutes(),0,0)},$scope.today=function(){$scope.dt=new Date},$scope.today(),$scope.clear=function(){$scope.dt=null},$scope.disabled=function(date,mode){return"day"===mode&&5===date.getDay()},$scope.toggleMin=function(){$scope.minDate=$scope.minDate?null:new Date},$scope.toggleMin(),$scope.open=function($event){$event.preventDefault(),$event.stopPropagation(),$scope.opened=!0},$scope.dateOptions={formatYear:"yy",startingDay:1},$scope.formats=["dd-MMMM-yyyy","yyyy/MM/dd","dd.MM.yyyy","shortDate"],$scope.format=$scope.formats[0];var tomorrow=new Date;tomorrow.setDate(tomorrow.getDate()+1);var afterTomorrow=new Date;afterTomorrow.setDate(tomorrow.getDate()+2),$scope.events=[{date:tomorrow,status:"full"},{date:afterTomorrow,status:"partially"}],$scope.getDayClass=function(date,mode){if("day"===mode)for(var dayToCheck=new Date(date).setHours($scope.mytime.getHours(),$scope.mytime.getMinutes(),0,0),i=0;i<$scope.events.length;i++){var currentDay=new Date($scope.events[i].date).setHours($scope.mytime.getHours(),$scope.mytime.getMinutes(),0,0);if(dayToCheck===currentDay)return $scope.events[i].status}return""},$scope.mytime=new Date,$scope.hstep=1,$scope.mstep=15,$scope.options={hstep:[1,2,3],mstep:[1,5,10,15,25,30]},$scope.ismeridian=!0,$scope.toggleMode=function(){$scope.ismeridian=!$scope.ismeridian},$scope.update=function(){var d=new Date;d.setHours(14),d.setMinutes(0),$scope.mytime=d},$scope.clear=function(){$scope.mytime=null}}]),angular.module("evenements").factory("Evenements",["$resource",function($resource){return $resource("evenements/:evenementId",{evenementId:"@_id"},{update:{method:"PUT"}})}]),angular.module("likes").run(["Menus",function(){}]),angular.module("likes").config(["$stateProvider",function($stateProvider){$stateProvider.state("listLikes",{url:"/likes",templateUrl:"modules/likes/views/list-likes.client.view.html"}).state("createLike",{url:"/likes/create",templateUrl:"modules/likes/views/create-like.client.view.html"}).state("viewLike",{url:"/likes/:likeId",templateUrl:"modules/likes/views/view-like.client.view.html"}).state("editLike",{url:"/likes/:likeId/edit",templateUrl:"modules/likes/views/edit-like.client.view.html"})}]),angular.module("likes").controller("LikesController",["$scope","$http","$stateParams","$location","Authentication","Likes",function($scope,$http,$stateParams,$location,Authentication,Likes){function listLike(){var i;for($scope.list="",i=0;i<$scope.likesList.length;i++)$scope.authentication.user._id==$scope.likesList[i].user._id?($scope.rank=i,$scope.list+="Vous, ",$scope.aime=!0):$scope.list+=$scope.likesList[i].user.displayName+", "}$scope.authentication=Authentication,this.createLikeContenu=function(contenu){var like=new Likes({contenu:contenu._id});like.$save({contenuId:contenu._id},function(response){response.user=$scope.authentication.user,$scope.likesList.push(response),listLike(),$scope.aime=!0},function(errorResponse){$scope.error=errorResponse.data.message})},this.removeLikeContenu=function(contenu){$http["delete"]("contenus/"+contenu._id+"/likes/").success(function(){$scope.likesList.pop($scope.rank),listLike(),$scope.aime=!1})},$scope.update=function(){var like=$scope.like;like.$update(function(){$location.path("likes/"+like._id)},function(errorResponse){$scope.error=errorResponse.data.message})},this.find=function(contenu){$http.get("contenus/"+contenu._id+"/likes/").success(function(response){$scope.likesList=response,listLike(response)})},$scope.findOne=function(){$scope.like=Likes.get({likeId:$stateParams.likeId})}}]),angular.module("likes").factory("Likes",["$resource",function($resource){return $resource("contenus/:contenuId/likes/:likeId",{contenuId:"@contenuId",likeId:"@_id"},{update:{method:"PUT"}})}]),angular.module("moderations").run(["Menus",function(){}]),angular.module("moderations").config(["$stateProvider",function($stateProvider){$stateProvider.state("listModerations",{url:"/moderations",templateUrl:"modules/moderations/views/list-moderations.client.view.html"}).state("createModeration",{url:"/moderations/create",templateUrl:"modules/moderations/views/create-moderation.client.view.html"}).state("viewModeration",{url:"/moderations/:moderationId",templateUrl:"modules/moderations/views/view-moderation.client.view.html"}).state("editModeration",{url:"/moderations/:moderationId/edit",templateUrl:"modules/moderations/views/edit-moderation.client.view.html"})}]),angular.module("moderations").controller("ModerationsController",["$scope","$stateParams","$location","Authentication","Moderations",function($scope,$stateParams,$location,Authentication,Moderations){$scope.authentication=Authentication,$scope.create=function(){var moderation=new Moderations({name:this.name});moderation.$save(function(response){$location.path("moderations/"+response._id),$scope.name=""},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.remove=function(moderation){if(moderation){moderation.$remove();for(var i in $scope.moderations)$scope.moderations[i]===moderation&&$scope.moderations.splice(i,1)}else $scope.moderation.$remove(function(){$location.path("moderations")})},$scope.update=function(){var moderation=$scope.moderation;moderation.$update(function(){$location.path("moderations/"+moderation._id)},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.find=function(){$scope.moderations=Moderations.query()},$scope.findOne=function(){$scope.moderation=Moderations.get({moderationId:$stateParams.moderationId})}}]),angular.module("moderations").factory("Moderations",["$resource",function($resource){return $resource("moderations/:moderationId",{moderationId:"@_id"},{update:{method:"PUT"}})}]),angular.module("notifications").run(["Menus",function(){}]),angular.module("notifications").config(["$stateProvider",function($stateProvider){$stateProvider.state("listNotifications",{url:"/notifications",templateUrl:"modules/notifications/views/list-notifications.client.view.html"}).state("createNotification",{url:"/notifications/create",templateUrl:"modules/notifications/views/create-notification.client.view.html"}).state("viewNotification",{url:"/notifications/:notificationId",templateUrl:"modules/notifications/views/view-notification.client.view.html"}).state("editNotification",{url:"/notifications/:notificationId/edit",templateUrl:"modules/notifications/views/edit-notification.client.view.html"})}]),angular.module("notifications").controller("NotificationsController",["$scope","$stateParams","$location","Authentication","Notifications",function($scope,$stateParams,$location,Authentication,Notifications){$scope.authentication=Authentication,$scope.create=function(){var notification=new Notifications({name:this.name});notification.$save(function(response){$location.path("notifications/"+response._id),$scope.name=""},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.remove=function(notification){if(notification){notification.$remove();for(var i in $scope.notifications)$scope.notifications[i]===notification&&$scope.notifications.splice(i,1)}else $scope.notification.$remove(function(){$location.path("notifications")})},$scope.update=function(){var notification=$scope.notification;notification.$update(function(){$location.path("notifications/"+notification._id)},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.find=function(){$scope.notifications=Notifications.query()},$scope.findOne=function(){$scope.notification=Notifications.get({notificationId:$stateParams.notificationId})}}]),angular.module("notifications").factory("Notifications",["$resource",function($resource){return $resource("notifications/:notificationId",{notificationId:"@_id"},{update:{method:"PUT"}})}]),angular.module("offres").run(["Menus",function(){}]),angular.module("offres").config(["$stateProvider",function($stateProvider){$stateProvider.state("listOffres",{url:"/offres",templateUrl:"modules/offres/views/list-offres.client.view.html"}).state("createOffre",{url:"/offres/create",templateUrl:"modules/offres/views/create-offre.client.view.html"}).state("viewOffre",{url:"/offres/:offreId",templateUrl:"modules/offres/views/view-offre.client.view.html"}).state("editOffre",{url:"/offres/:offreId/edit",templateUrl:"modules/offres/views/edit-offre.client.view.html"})
}]),angular.module("offres").controller("OffresController",["$scope","$http","$stateParams","$location","Authentication","Offres","$modal","$log","$http",function($scope,$http,$stateParams,$location,Authentication,Offres,$modal,$log){$scope.authentication=Authentication,this.modalCreate=function(size){var modalInstance=$modal.open({animation:$scope.animationsEnabled,templateUrl:"modules/offres/views/create-offre.client.view.html",controller:["$scope","$modalInstance","parentScope",function($scope,$modalInstance,parentScope){$scope.create=function(){console.log(entreprise);var offre=new Offres({entreprise:$scope.entreprise,post:$scope.poste,competences:$scope.listCompetence,documents:$scope.listDocument});offre.$save(function(){parentScope.find()},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.ok=function(){$scope.create(),modalInstance.close()},$scope.cancel=function(){$modalInstance.dismiss("cancel")}}],size:size,resolve:{offre:function(){return $scope.offre},parentScope:function(){return $scope}}})},this.modalUpdate=function(size,selectedOffre){var modalInstance=$modal.open({templateUrl:"modules/offres/views/edit-offre.client.view.html",controller:["$scope","$modalInstance","offre",function($scope,$modalInstance,offre){$scope.offre=offre,$scope.ok=function(){modalInstance.close($scope.offre)},$scope.cancel=function(){$modalInstance.dismiss("cancel")}}],size:size,resolve:{offre:function(){return selectedOffre}}});modalInstance.result.then(function(selectedItem){$scope.selected=selectedItem},function(){$log.info("Modal dismissed at: "+new Date)})},$scope.find=this.find=function(){$http.get("offres/").success(function(response){$scope.offresList=response})},this.remove=function(contenu){$http["delete"]("/offres/"+contenu.offre._id).success(function(){$scope.find()})},$scope.findOne=function(){$scope.offre=Evenements.get({offreId:$stateParams.offreId})}}]),angular.module("offres").controller("OffresUpdateController",["$scope","Offres","$http",function($scope,Offres,$http){this.update=function(updatedOffre){var offre=updatedOffre;$http.put("offres/"+offre._id,offre).success(function(){})}}]),angular.module("offres").factory("Offres",["$resource",function($resource){return $resource("offres/:offreId",{offreId:"@_id"},{update:{method:"PUT"}})}]),angular.module("pub-contenus").config(["$stateProvider",function($stateProvider){$stateProvider.state("pub-contenu",{url:"/pub-contenu",templateUrl:"modules/pub-contenus/views/pub-contenu.client.view.html"})}]),angular.module("pub-imags").config(["$stateProvider",function($stateProvider){$stateProvider.state("listPubImags",{url:"/pub-imags",templateUrl:"modules/pub-imags/views/list-pub-imags.client.view.html"}).state("createPubImag",{url:"/pub-imags/create",templateUrl:"modules/pub-imags/views/create-pub-imag.client.view.html"}).state("viewPubImag",{url:"/pub-imags/:pubImagId",templateUrl:"modules/pub-imags/views/view-pub-imag.client.view.html"}).state("editPubImag",{url:"/pub-imags/:pubImagId/edit",templateUrl:"modules/pub-imags/views/edit-pub-imag.client.view.html"})}]),angular.module("pub-imags").controller("PubImagsController",["$scope","$upload","$stateParams","$location","Authentication","PubImags","DataImages",function($scope,$upload,$stateParams,$location,Authentication,PubImags,DataImages){$scope.authentication=Authentication,$scope.image_data_thumbnail="/images/260x180.png",$scope.upload=function(files){if(files&&files.length){var file=files[0];$upload.upload({method:"POST",url:"/pub-imags/create",file:file}).progress(function(evt){var progressPercentage=parseInt(100*evt.loaded/evt.total);document.getElementById("bar1").style.width=progressPercentage+"%"}).success(function(data){$scope.originalFile=data.originalFile,$scope.image_data_thumbnail=data.data,$scope.image_data_type=data.typeData})}},$scope.create=function(){var pubImag=new PubImags({id_file_original:this.originalFile._id,image_data_thumbnail:this.image_data_thumbnail,typeImage:this.image_data_type,description:this.description});pubImag.$save(function(){document.getElementById("bar1").style.width="0%",$scope.find(),$scope.image_data="/images/260x180.png",$scope.image_data_type="",$scope.description=""},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.remove=function(pubImag){if(pubImag){pubImag.$remove();for(var i in $scope.pubImags)$scope.pubImags[i]===pubImag&&$scope.pubImags.splice(i,1)}else $scope.pubImag.$remove(function(){$location.path("pub-imags/create")})},$scope.update=function(){var pubImag=$scope.pubImag;pubImag.$update(function(){$location.path("pub-imags/"+pubImag._id)},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.find=function(){$scope.pubImags=PubImags.query()},$scope.findOne=function(){$scope.pubImag=PubImags.get({pubImagId:$stateParams.pubImagId}),$scope.dataImageUrl=DataImages.get({dataImageId:$stateParams.pubImagId})}}]),angular.module("pub-imags").factory("PubImags",["$resource",function($resource){return $resource("pub-imags/:pubImagId",{pubImagId:"@_id"},{update:{method:"PUT"}})}]),angular.module("pub-videos").run(["Menus",function(){}]),angular.module("pub-videos").config(["$stateProvider",function($stateProvider){$stateProvider.state("listPubVideos",{url:"/pub-videos",templateUrl:"modules/pub-videos/views/list-pub-videos.client.view.html"}).state("createPubVideo",{url:"/pub-videos/create",templateUrl:"modules/pub-videos/views/create-pub-video.client.view.html"}).state("viewPubVideo",{url:"/pub-videos/:pubVideoId",templateUrl:"modules/pub-videos/views/view-pub-video.client.view.html"}).state("editPubVideo",{url:"/pub-videos/:pubVideoId/edit",templateUrl:"modules/pub-videos/views/edit-pub-video.client.view.html"})}]),angular.module("pub-videos").controller("PubVideosController",["$scope","$upload","$stateParams","$location","Authentication","PubVideos","DataVideos",function($scope,$upload,$stateParams,$location,Authentication,PubVideos){$scope.authentication=Authentication,$scope.upload=function(files){if(files&&files.length){var file=files[0];$upload.upload({method:"POST",url:"/pub-videos/create",file:file}).progress(function(evt){var progressPercentage=parseInt(100*evt.loaded/evt.total);document.getElementById("bar1").style.width=progressPercentage+"%"}).success(function(){})}},$scope.create=function(){var pubVideo=new PubVideos({id_file_video:this.file._id,description:this.description});pubVideo.$save(function(){document.getElementById("bar1").style.width="0%",$scope.find(),$scope.description=""},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.remove=function(pubVideo){if(pubVideo){pubVideo.$remove();for(var i in $scope.pubVideos)$scope.pubVideos[i]===pubVideo&&$scope.pubVideos.splice(i,1)}else $scope.pubVideo.$remove(function(){$location.path("pub-videos/create"),$scope.find()})},$scope.update=function(){var pubVideo=$scope.pubVideo;pubVideo.$update(function(){$location.path("pub-videos/"+pubVideo._id)},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.find=function(){$scope.pubVideos=PubVideos.query()},$scope.findOne=function(){$scope.pubVideo=PubVideos.get({pubVideoId:$stateParams.pubVideoId})}}]),angular.module("pub-videos").factory("PubVideos",["$resource",function($resource){return $resource("pub-videos/:pubVideoId",{pubVideoId:"@_id"},{update:{method:"PUT"}})}]),angular.module("signalements").run(["Menus",function(){}]),angular.module("signalements").config(["$stateProvider",function($stateProvider){$stateProvider.state("listSignalements",{url:"/signalements",templateUrl:"modules/signalements/views/list-signalements.client.view.html"}).state("createSignalement",{url:"/signalements/create",templateUrl:"modules/signalements/views/create-signalement.client.view.html"}).state("viewSignalement",{url:"/signalements/:signalementId",templateUrl:"modules/signalements/views/view-signalement.client.view.html"}).state("editSignalement",{url:"/signalements/:signalementId/edit",templateUrl:"modules/signalements/views/edit-signalement.client.view.html"})}]),angular.module("signalements").controller("SignalementsController",["$scope","$stateParams","$location","Authentication","Signalements",function($scope,$stateParams,$location,Authentication,Signalements){$scope.authentication=Authentication,$scope.create=function(){var signalement=new Signalements({name:this.name});signalement.$save(function(response){$location.path("signalements/"+response._id),$scope.name=""},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.remove=function(signalement){if(signalement){signalement.$remove();for(var i in $scope.signalements)$scope.signalements[i]===signalement&&$scope.signalements.splice(i,1)}else $scope.signalement.$remove(function(){$location.path("signalements")})},$scope.update=function(){var signalement=$scope.signalement;signalement.$update(function(){$location.path("signalements/"+signalement._id)},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.find=function(){$scope.signalements=Signalements.query()},$scope.findOne=function(){$scope.signalement=Signalements.get({signalementId:$stateParams.signalementId})}}]),angular.module("signalements").factory("Signalements",["$resource",function($resource){return $resource("signalements/:signalementId",{signalementId:"@_id"},{update:{method:"PUT"}})}]),angular.module("statuses").run(["Menus",function(){}]),angular.module("statuses").config(["$stateProvider",function($stateProvider){$stateProvider.state("listStatuses",{url:"/statuses",templateUrl:"modules/statuses/views/list-statuses.client.view.html"}).state("createStatus",{url:"/statuses/create",templateUrl:"modules/statuses/views/create-status.client.view.html"}).state("viewStatus",{url:"/statuses/:statusId",templateUrl:"modules/statuses/views/view-status.client.view.html"}).state("editStatus",{url:"/statuses/:statusId/edit",templateUrl:"modules/statuses/views/edit-status.client.view.html"})}]),angular.module("statuses").controller("StatusesController",["$scope","$http","$stateParams","$location","Authentication","Statuses",function($scope,$http,$stateParams,$location,Authentication,Statuses){$scope.authentication=Authentication,$scope.create=function(){var status=new Statuses({name:this.name});status.$save(function(response){$location.path("statuses/"+response._id),$scope.name=""},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.remove=function(status){if(status){status.$remove();for(var i in $scope.statuses)$scope.statuses[i]===status&&$scope.statuses.splice(i,1)}else $scope.status.$remove(function(){$location.path("statuses")})},$scope.update=function(){var status=$scope.status;status.$update(function(){$location.path("statuses/"+status._id)},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.find=function(){$scope.statuses=Statuses.query()},$scope.findOne=function(){$scope.status=Statuses.get({statusId:$stateParams.statusId})}}]),angular.module("statuses").factory("Statuses",["$resource",function($resource){return $resource("statuses/:statusId",{statusId:"@_id"},{update:{method:"PUT"}})}]),angular.module("users").config(["$httpProvider",function($httpProvider){$httpProvider.interceptors.push(["$q","$location","Authentication",function($q,$location,Authentication){return{responseError:function(rejection){switch(rejection.status){case 401:Authentication.user=null,$location.path("signin");break;case 403:}return $q.reject(rejection)}}}])}]),angular.module("users").config(["$stateProvider",function($stateProvider){$stateProvider.state("profile",{url:"/settings/profile",templateUrl:"modules/users/views/settings/edit-profile.client.view.html"}).state("password",{url:"/settings/password",templateUrl:"modules/users/views/settings/change-password.client.view.html"}).state("accounts",{url:"/settings/accounts",templateUrl:"modules/users/views/settings/social-accounts.client.view.html"}).state("signup",{url:"/signup",templateUrl:"modules/users/views/authentication/signup.client.view.html"}).state("signin",{url:"/signin",templateUrl:"modules/users/views/authentication/signin.client.view.html"}).state("forgot",{url:"/password/forgot",templateUrl:"modules/users/views/password/forgot-password.client.view.html"}).state("reset-invalid",{url:"/password/reset/invalid",templateUrl:"modules/users/views/password/reset-password-invalid.client.view.html"}).state("reset-success",{url:"/password/reset/success",templateUrl:"modules/users/views/password/reset-password-success.client.view.html"}).state("reset",{url:"/password/reset/:token",templateUrl:"modules/users/views/password/reset-password.client.view.html"})}]),angular.module("users").controller("AuthenticationController",["$scope","$http","$location","Authentication",function($scope,$http,$location,Authentication){$scope.authentication=Authentication,$scope.authentication.user&&$location.path("/"),$scope.signup=function(){$http.post("/auth/signup",$scope.credentials).success(function(response){$scope.authentication.user=response,$location.path("/")}).error(function(response){$scope.error=response.message})},$scope.signin=function(){$http.post("/auth/signin",$scope.credentials).success(function(response){$scope.authentication.user=response,$location.path("/")}).error(function(response){$scope.error=response.message})}}]),angular.module("users").controller("PasswordController",["$scope","$stateParams","$http","$location","Authentication",function($scope,$stateParams,$http,$location,Authentication){$scope.authentication=Authentication,$scope.authentication.user&&$location.path("/"),$scope.askForPasswordReset=function(){$scope.success=$scope.error=null,$http.post("/auth/forgot",$scope.credentials).success(function(response){$scope.credentials=null,$scope.success=response.message}).error(function(response){$scope.credentials=null,$scope.error=response.message})},$scope.resetUserPassword=function(){$scope.success=$scope.error=null,$http.post("/auth/reset/"+$stateParams.token,$scope.passwordDetails).success(function(response){$scope.passwordDetails=null,Authentication.user=response,$location.path("/password/reset/success")}).error(function(response){$scope.error=response.message})}}]),angular.module("users").controller("SettingsController",["$scope","$http","$location","Users","Authentication",function($scope,$http,$location,Users,Authentication){$scope.user=Authentication.user,$scope.user||$location.path("/"),$scope.hasConnectedAdditionalSocialAccounts=function(){for(var i in $scope.user.additionalProvidersData)return!0;return!1},$scope.isConnectedSocialAccount=function(provider){return $scope.user.provider===provider||$scope.user.additionalProvidersData&&$scope.user.additionalProvidersData[provider]},$scope.removeUserSocialAccount=function(provider){$scope.success=$scope.error=null,$http["delete"]("/users/accounts",{params:{provider:provider}}).success(function(response){$scope.success=!0,$scope.user=Authentication.user=response}).error(function(response){$scope.error=response.message})},$scope.updateUserProfile=function(isValid){if(isValid){$scope.success=$scope.error=null;var user=new Users($scope.user);user.$update(function(response){$scope.success=!0,Authentication.user=response},function(response){$scope.error=response.data.message})}else $scope.submitted=!0},$scope.changeUserPassword=function(){$scope.success=$scope.error=null,$http.post("/users/password",$scope.passwordDetails).success(function(){$scope.success=!0,$scope.passwordDetails=null}).error(function(response){$scope.error=response.message})}}]),angular.module("users").factory("Authentication",["$window",function($window){var auth={user:$window.user};return auth}]),angular.module("users").factory("Users",["$resource",function($resource){return $resource("users",{},{update:{method:"PUT"}})}]);