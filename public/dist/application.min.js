"use strict";var ApplicationConfiguration=function(){var applicationModuleName="mean",applicationModuleVendorDependencies=["ngResource","ngAnimate","ui.router","ui.bootstrap","ui.utils","angularFileUpload"],registerModule=function(moduleName,dependencies){angular.module(moduleName,dependencies||[]),angular.module(applicationModuleName).requires.push(moduleName)};return{applicationModuleName:applicationModuleName,applicationModuleVendorDependencies:applicationModuleVendorDependencies,registerModule:registerModule}}();angular.module(ApplicationConfiguration.applicationModuleName,ApplicationConfiguration.applicationModuleVendorDependencies),angular.module(ApplicationConfiguration.applicationModuleName).config(["$locationProvider",function($locationProvider){$locationProvider.hashPrefix("!")}]),angular.element(document).ready(function(){"#_=_"===window.location.hash&&(window.location.hash="#!"),angular.bootstrap(document,[ApplicationConfiguration.applicationModuleName])}),ApplicationConfiguration.registerModule("articles"),ApplicationConfiguration.registerModule("contenus"),ApplicationConfiguration.registerModule("core"),ApplicationConfiguration.registerModule("pub-imags"),ApplicationConfiguration.registerModule("pub-videos"),ApplicationConfiguration.registerModule("statuses"),ApplicationConfiguration.registerModule("tests"),ApplicationConfiguration.registerModule("users"),angular.module("articles").run(["Menus",function(Menus){Menus.addMenuItem("topbar","Articles","articles","dropdown","/articles(/create)?"),Menus.addSubMenuItem("topbar","articles","List Articles","articles"),Menus.addSubMenuItem("topbar","articles","New Article","articles/create")}]),angular.module("articles").config(["$stateProvider",function($stateProvider){$stateProvider.state("listArticles",{url:"/articles",templateUrl:"modules/articles/views/list-articles.client.view.html"}).state("createArticle",{url:"/articles/create",templateUrl:"modules/articles/views/create-article.client.view.html"}).state("viewArticle",{url:"/articles/:articleId",templateUrl:"modules/articles/views/view-article.client.view.html"}).state("editArticle",{url:"/articles/:articleId/edit",templateUrl:"modules/articles/views/edit-article.client.view.html"})}]),angular.module("articles").controller("ArticlesController",["$scope","$stateParams","$location","Authentication","Articles",function($scope,$stateParams,$location,Authentication,Articles){$scope.authentication=Authentication,$scope.create=function(){var article=new Articles({title:this.title,content:this.content});article.$save(function(response){$location.path("articles/"+response._id),$scope.title="",$scope.content=""},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.remove=function(article){if(article){article.$remove();for(var i in $scope.articles)$scope.articles[i]===article&&$scope.articles.splice(i,1)}else $scope.article.$remove(function(){$location.path("articles")})},$scope.update=function(){var article=$scope.article;article.$update(function(){$location.path("articles/"+article._id)},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.find=function(){$scope.articles=Articles.query()},$scope.findOne=function(){$scope.article=Articles.get({articleId:$stateParams.articleId})}}]),angular.module("articles").factory("Articles",["$resource",function($resource){return $resource("articles/:articleId",{articleId:"@_id"},{update:{method:"PUT"}})}]),angular.module("contenus").run(["Menus",function(Menus){Menus.addMenuItem("topbar","Contenus","contenus","dropdown","/contenus(/create)?"),Menus.addSubMenuItem("topbar","contenus","List Contenus","contenus"),Menus.addSubMenuItem("topbar","contenus","New Contenu","contenus/create")}]),angular.module("contenus").config(["$stateProvider",function($stateProvider){$stateProvider.state("listContenus",{url:"/contenus",templateUrl:"modules/contenus/views/list-contenus.client.view.html"}).state("createContenu",{url:"/contenus/create",templateUrl:"modules/contenus/views/create-contenu.client.view.html"}).state("viewContenu",{url:"/contenus/:contenuId",templateUrl:"modules/contenus/views/view-contenu.client.view.html"}).state("editContenu",{url:"/contenus/:contenuId/edit",templateUrl:"modules/contenus/views/edit-contenu.client.view.html"})}]),angular.module("contenus").controller("ContenusController",["$scope","$stateParams","$location","Authentication","Contenus",function($scope,$stateParams,$location,Authentication,Contenus){$scope.authentication=Authentication,$scope.create=function(){var contenu=new Contenus({name:this.name});contenu.$save(function(response){$location.path("contenus/"+response._id),$scope.name=""},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.remove=function(contenu){if(contenu){contenu.$remove();for(var i in $scope.contenus)$scope.contenus[i]===contenu&&$scope.contenus.splice(i,1)}else $scope.contenu.$remove(function(){$location.path("contenus")})},$scope.update=function(){var contenu=$scope.contenu;contenu.$update(function(){$location.path("contenus/"+contenu._id)},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.find=function(){$scope.contenus=Contenus.query()},$scope.findOne=function(){$scope.contenu=Contenus.get({contenuId:$stateParams.contenuId})}}]),angular.module("contenus").factory("Contenus",["$resource",function($resource){return $resource("contenus/:contenuId",{contenuId:"@_id"},{update:{method:"PUT"}})}]),angular.module("core").config(["$stateProvider","$urlRouterProvider",function($stateProvider,$urlRouterProvider){$urlRouterProvider.otherwise("/"),$stateProvider.state("home",{url:"/",templateUrl:"modules/core/views/home.client.view.html"})}]),angular.module("core").controller("HeaderController",["$scope","Authentication","Menus",function($scope,Authentication,Menus){$scope.authentication=Authentication,$scope.isCollapsed=!1,$scope.menu=Menus.getMenu("topbar"),$scope.toggleCollapsibleMenu=function(){$scope.isCollapsed=!$scope.isCollapsed},$scope.$on("$stateChangeSuccess",function(){$scope.isCollapsed=!1})}]),angular.module("core").controller("HomeController",["$scope","Authentication",function($scope,Authentication){$scope.authentication=Authentication}]),angular.module("core").service("Menus",[function(){this.defaultRoles=["*"],this.menus={};var shouldRender=function(user){if(!user)return this.isPublic;if(~this.roles.indexOf("*"))return!0;for(var userRoleIndex in user.roles)for(var roleIndex in this.roles)if(this.roles[roleIndex]===user.roles[userRoleIndex])return!0;return!1};this.validateMenuExistance=function(menuId){if(menuId&&menuId.length){if(this.menus[menuId])return!0;throw new Error("Menu does not exists")}throw new Error("MenuId was not provided")},this.getMenu=function(menuId){return this.validateMenuExistance(menuId),this.menus[menuId]},this.addMenu=function(menuId,isPublic,roles){return this.menus[menuId]={isPublic:isPublic||!1,roles:roles||this.defaultRoles,items:[],shouldRender:shouldRender},this.menus[menuId]},this.removeMenu=function(menuId){this.validateMenuExistance(menuId),delete this.menus[menuId]},this.addMenuItem=function(menuId,menuItemTitle,menuItemURL,menuItemType,menuItemUIRoute,isPublic,roles,position){return this.validateMenuExistance(menuId),this.menus[menuId].items.push({title:menuItemTitle,link:menuItemURL,menuItemType:menuItemType||"item",menuItemClass:menuItemType,uiRoute:menuItemUIRoute||"/"+menuItemURL,isPublic:null===isPublic||"undefined"==typeof isPublic?this.menus[menuId].isPublic:isPublic,roles:null===roles||"undefined"==typeof roles?this.menus[menuId].roles:roles,position:position||0,items:[],shouldRender:shouldRender}),this.menus[menuId]},this.addSubMenuItem=function(menuId,rootMenuItemURL,menuItemTitle,menuItemURL,menuItemUIRoute,isPublic,roles,position){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)this.menus[menuId].items[itemIndex].link===rootMenuItemURL&&this.menus[menuId].items[itemIndex].items.push({title:menuItemTitle,link:menuItemURL,uiRoute:menuItemUIRoute||"/"+menuItemURL,isPublic:null===isPublic||"undefined"==typeof isPublic?this.menus[menuId].items[itemIndex].isPublic:isPublic,roles:null===roles||"undefined"==typeof roles?this.menus[menuId].items[itemIndex].roles:roles,position:position||0,shouldRender:shouldRender});return this.menus[menuId]},this.removeMenuItem=function(menuId,menuItemURL){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)this.menus[menuId].items[itemIndex].link===menuItemURL&&this.menus[menuId].items.splice(itemIndex,1);return this.menus[menuId]},this.removeSubMenuItem=function(menuId,submenuItemURL){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)for(var subitemIndex in this.menus[menuId].items[itemIndex].items)this.menus[menuId].items[itemIndex].items[subitemIndex].link===submenuItemURL&&this.menus[menuId].items[itemIndex].items.splice(subitemIndex,1);return this.menus[menuId]},this.addMenu("topbar")}]),angular.module("pub-imags").config(["$stateProvider",function($stateProvider){$stateProvider.state("listPubImags",{url:"/pub-imags",templateUrl:"modules/pub-imags/views/list-pub-imags.client.view.html"}).state("createPubImag",{url:"/pub-imags/create",templateUrl:"modules/pub-imags/views/create-pub-imag.client.view.html"}).state("viewPubImag",{url:"/pub-imags/:pubImagId",templateUrl:"modules/pub-imags/views/view-pub-imag.client.view.html"}).state("editPubImag",{url:"/pub-imags/:pubImagId/edit",templateUrl:"modules/pub-imags/views/edit-pub-imag.client.view.html"})}]),angular.module("pub-imags").controller("PubImagsController",["$scope","$upload","$stateParams","$location","Authentication","PubImags",function($scope,$upload,$stateParams,$location,Authentication,PubImags){$scope.authentication=Authentication;var name,size,content;$scope.onFileSelect=function($files){var file;if(null!=$files[0]){file=$files[0];var imgType;imgType=file.name.split("."),imgType=imgType[imgType.length-1].toLowerCase(),$scope.name=file.name,size=file.size,name=file.name;var reader=new FileReader;reader.onprogress=function(e){document.getElementById("bar1").style.width=parseInt(100*e.loaded/e.total)+"%"},reader.onload=function(){document.getElementById("image").style.width="181px",document.getElementById("image").style.height="125px",document.getElementById("image").src=reader.result,content=reader.result},reader.readAsDataURL(file)}},$scope.create=function(){var pubImag=new PubImags({file:{name:name,size:size,content:content},description:this.description});pubImag.content=content,pubImag.$save(function(response){$location.path("pub-imags/"+response._id),$scope.description=""},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.remove=function(pubImag){if(pubImag){pubImag.$remove();for(var i in $scope.pubImags)$scope.pubImags[i]===pubImag&&$scope.pubImags.splice(i,1)}else $scope.pubImag.$remove(function(){$location.path("pub-imags")})},$scope.update=function(){var pubImag=$scope.pubImag;pubImag.$update(function(){$location.path("pub-imags/"+pubImag._id)},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.find=function(){$scope.pubImags=PubImags.query()},$scope.findOne=function(){$scope.pubImag=PubImags.get({pubImagId:$stateParams.pubImagId})}}]),angular.module("pub-imags").factory("PubImags",["$resource",function($resource){return $resource("pub-imags/:pubImagId",{pubImagId:"@_id"},{update:{method:"PUT"}})}]),angular.module("pub-videos").run(["Menus",function(Menus){Menus.addMenuItem("topbar","Pub videos","pub-videos","dropdown","/pub-videos(/create)?"),Menus.addSubMenuItem("topbar","pub-videos","List Pub videos","pub-videos"),Menus.addSubMenuItem("topbar","pub-videos","New Pub video","pub-videos/create")}]),angular.module("pub-videos").config(["$stateProvider",function($stateProvider){$stateProvider.state("listPubVideos",{url:"/pub-videos",templateUrl:"modules/pub-videos/views/list-pub-videos.client.view.html"}).state("createPubVideo",{url:"/pub-videos/create",templateUrl:"modules/pub-videos/views/create-pub-video.client.view.html"}).state("viewPubVideo",{url:"/pub-videos/:pubVideoId",templateUrl:"modules/pub-videos/views/view-pub-video.client.view.html"}).state("editPubVideo",{url:"/pub-videos/:pubVideoId/edit",templateUrl:"modules/pub-videos/views/edit-pub-video.client.view.html"})}]),angular.module("pub-videos").controller("PubVideosController",["$scope","$stateParams","$location","Authentication","PubVideos",function($scope,$stateParams,$location,Authentication,PubVideos){$scope.authentication=Authentication;var name,size,content;$scope.onFileSelect=function($files){var file;if(null!=$files[0]){file=$files[0];var imgType;imgType=file.name.split("."),imgType=imgType[imgType.length-1].toLowerCase(),$scope.name=file.name,size=file.size,name=file.name;var reader=new FileReader;reader.onprogress=function(e){document.getElementById("bar1").style.width=parseInt(100*e.loaded/e.total)+"%"},reader.onload=function(){$("#image").replaceWith("<video  id='video' src=''></video>"),document.getElementById("video").style.width="181px",document.getElementById("video").style.height="125px",document.getElementById("video").src=reader.result,content=reader.result,console.log(content)},reader.readAsDataURL(file)}},$scope.create=function(){var pubVideo=new PubVideos({file:{name:name,size:size,content:content},description:this.description});pubVideo.$save(function(response){$location.path("pub-videos/"+response._id),$scope.description=""},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.remove=function(pubVideo){if(pubVideo){pubVideo.$remove();for(var i in $scope.pubVideos)$scope.pubVideos[i]===pubVideo&&$scope.pubVideos.splice(i,1)}else $scope.pubVideo.$remove(function(){$location.path("pub-videos")})},$scope.update=function(){var pubVideo=$scope.pubVideo;pubVideo.$update(function(){$location.path("pub-videos/"+pubVideo._id)},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.find=function(){$scope.pubVideos=PubVideos.query()},$scope.findOne=function(){$scope.pubVideo=PubVideos.get({pubVideoId:$stateParams.pubVideoId})}}]),angular.module("pub-videos").factory("PubVideos",["$resource",function($resource){return $resource("pub-videos/:pubVideoId",{pubVideoId:"@_id"},{update:{method:"PUT"}})}]),angular.module("statuses").run(["Menus",function(Menus){Menus.addMenuItem("topbar","Statuses","statuses","dropdown","/statuses(/create)?"),Menus.addSubMenuItem("topbar","statuses","List Statuses","statuses"),Menus.addSubMenuItem("topbar","statuses","New Status","statuses/create")}]),angular.module("statuses").config(["$stateProvider",function($stateProvider){$stateProvider.state("listStatuses",{url:"/statuses",templateUrl:"modules/statuses/views/list-statuses.client.view.html"}).state("createStatus",{url:"/statuses/create",templateUrl:"modules/statuses/views/create-status.client.view.html"}).state("viewStatus",{url:"/statuses/:statusId",templateUrl:"modules/statuses/views/view-status.client.view.html"}).state("editStatus",{url:"/statuses/:statusId/edit",templateUrl:"modules/statuses/views/edit-status.client.view.html"})}]),angular.module("statuses").controller("StatusesController",["$scope","$stateParams","$location","Authentication","Statuses",function($scope,$stateParams,$location,Authentication,Statuses){$scope.authentication=Authentication,$scope.create=function(){var status=new Statuses({name:this.name});status.$save(function(response){$location.path("statuses/"+response._id),$scope.name=""},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.remove=function(status){if(status){status.$remove();for(var i in $scope.statuses)$scope.statuses[i]===status&&$scope.statuses.splice(i,1)}else $scope.status.$remove(function(){$location.path("statuses")})},$scope.update=function(){var status=$scope.status;status.$update(function(){$location.path("statuses/"+status._id)},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.find=function(){$scope.statuses=Statuses.query()},$scope.findOne=function(){$scope.status=Statuses.get({statusId:$stateParams.statusId})}}]),angular.module("statuses").factory("Statuses",["$resource",function($resource){return $resource("statuses/:statusId",{statusId:"@_id"},{update:{method:"PUT"}})}]),angular.module("tests").run(["Menus",function(Menus){Menus.addMenuItem("topbar","Tests","tests","dropdown","/datas(/create)?"),Menus.addSubMenuItem("topbar","tests","List Tests","tests"),Menus.addSubMenuItem("topbar","tests","New Test","datas/create")}]),angular.module("tests").config(["$stateProvider",function($stateProvider){$stateProvider.state("listTests",{url:"/datas",templateUrl:"modules/datas/views/list-datas.client.view.html"}).state("createTest",{url:"/datas/create",templateUrl:"modules/datas/views/create-test.client.view.html"}).state("viewTest",{url:"/datas/:testId",templateUrl:"modules/datas/views/view-test.client.view.html"}).state("editTest",{url:"/datas/:testId/edit",templateUrl:"modules/datas/views/edit-test.client.view.html"})}]),angular.module("tests").controller("TestsController",["$scope","$stateParams","$location","Authentication","Tests",function($scope,$stateParams,$location,Authentication,Tests){$scope.authentication=Authentication,$scope.create=function(){var test=new Tests({name:this.name});test.$save(function(response){$location.path("datas/"+response._id),$scope.name=""},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.remove=function(test){if(test){test.$remove();for(var i in $scope.tests)$scope.tests[i]===test&&$scope.tests.splice(i,1)}else $scope.test.$remove(function(){$location.path("tests")})},$scope.update=function(){var test=$scope.test;test.$update(function(){$location.path("datas/"+test._id)},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.find=function(){$scope.tests=Tests.query()},$scope.findOne=function(){$scope.test=Tests.get({testId:$stateParams.testId})}}]),angular.module("tests").factory("Tests",["$resource",function($resource){return $resource("datas/:testId",{testId:"@_id"},{update:{method:"PUT"}})}]),angular.module("users").config(["$httpProvider",function($httpProvider){$httpProvider.interceptors.push(["$q","$location","Authentication",function($q,$location,Authentication){return{responseError:function(rejection){switch(rejection.status){case 401:Authentication.user=null,$location.path("signin");break;case 403:}return $q.reject(rejection)}}}])}]),angular.module("users").config(["$stateProvider",function($stateProvider){$stateProvider.state("profile",{url:"/settings/profile",templateUrl:"modules/users/views/settings/edit-profile.client.view.html"}).state("password",{url:"/settings/password",templateUrl:"modules/users/views/settings/change-password.client.view.html"}).state("accounts",{url:"/settings/accounts",templateUrl:"modules/users/views/settings/social-accounts.client.view.html"}).state("signup",{url:"/signup",templateUrl:"modules/users/views/authentication/signup.client.view.html"}).state("signin",{url:"/signin",templateUrl:"modules/users/views/authentication/signin.client.view.html"}).state("forgot",{url:"/password/forgot",templateUrl:"modules/users/views/password/forgot-password.client.view.html"}).state("reset-invalid",{url:"/password/reset/invalid",templateUrl:"modules/users/views/password/reset-password-invalid.client.view.html"}).state("reset-success",{url:"/password/reset/success",templateUrl:"modules/users/views/password/reset-password-success.client.view.html"}).state("reset",{url:"/password/reset/:token",templateUrl:"modules/users/views/password/reset-password.client.view.html"})}]),angular.module("users").controller("AuthenticationController",["$scope","$http","$location","Authentication",function($scope,$http,$location,Authentication){$scope.authentication=Authentication,$scope.authentication.user&&$location.path("/"),$scope.signup=function(){$http.post("/auth/signup",$scope.credentials).success(function(response){$scope.authentication.user=response,$location.path("/")}).error(function(response){$scope.error=response.message})},$scope.signin=function(){$http.post("/auth/signin",$scope.credentials).success(function(response){$scope.authentication.user=response,$location.path("/")}).error(function(response){$scope.error=response.message})}}]),angular.module("users").controller("PasswordController",["$scope","$stateParams","$http","$location","Authentication",function($scope,$stateParams,$http,$location,Authentication){$scope.authentication=Authentication,$scope.authentication.user&&$location.path("/"),$scope.askForPasswordReset=function(){$scope.success=$scope.error=null,$http.post("/auth/forgot",$scope.credentials).success(function(response){$scope.credentials=null,$scope.success=response.message}).error(function(response){$scope.credentials=null,$scope.error=response.message})},$scope.resetUserPassword=function(){$scope.success=$scope.error=null,$http.post("/auth/reset/"+$stateParams.token,$scope.passwordDetails).success(function(response){$scope.passwordDetails=null,Authentication.user=response,$location.path("/password/reset/success")}).error(function(response){$scope.error=response.message})}}]),angular.module("users").controller("SettingsController",["$scope","$http","$location","Users","Authentication",function($scope,$http,$location,Users,Authentication){$scope.user=Authentication.user,$scope.user||$location.path("/"),$scope.hasConnectedAdditionalSocialAccounts=function(){for(var i in $scope.user.additionalProvidersData)return!0;return!1},$scope.isConnectedSocialAccount=function(provider){return $scope.user.provider===provider||$scope.user.additionalProvidersData&&$scope.user.additionalProvidersData[provider]},$scope.removeUserSocialAccount=function(provider){$scope.success=$scope.error=null,$http["delete"]("/users/accounts",{params:{provider:provider}}).success(function(response){$scope.success=!0,$scope.user=Authentication.user=response}).error(function(response){$scope.error=response.message})},$scope.updateUserProfile=function(isValid){if(isValid){$scope.success=$scope.error=null;var user=new Users($scope.user);user.$update(function(response){$scope.success=!0,Authentication.user=response},function(response){$scope.error=response.data.message})}else $scope.submitted=!0},$scope.changeUserPassword=function(){$scope.success=$scope.error=null,$http.post("/users/password",$scope.passwordDetails).success(function(){$scope.success=!0,$scope.passwordDetails=null}).error(function(response){$scope.error=response.message})}}]),angular.module("users").factory("Authentication",["$window",function($window){var auth={user:$window.user};return auth}]),angular.module("users").factory("Users",["$resource",function($resource){return $resource("users",{},{update:{method:"PUT"}})}]);
